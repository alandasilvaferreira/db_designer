<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <link href="css/metro-bootstrap.css" rel="stylesheet" />    
    <link href="css/bootstrap-modal.css" rel="stylesheet" />    

    <link rel="stylesheet" type="text/css" href="knockout.tableEditor.css"/>
</head>
<body>
    <div class="container-fluid">   
      <div class="row-fluid columns"> 
        <div class="span2 article-tree">
            <div class="global-console1">
                <div>
                    <!-- ko foreach: logs -->
                    <span data-bind="text: log"></span><br />
                    <!-- /ko -->
                </div>
            </div>
        </div>
        <div class="span10 content-area">
          <!-- content column -->
            <div class="db-model1">
                <!-- navbar content -->
                <div class="btn-group" class="sprite-key">
                    <a class="btn btn-mini" data-bind="click: addNewTable"><span class="icon-plus-sign"></span>Add</a>
                    <a class="btn btn-mini" href="#ui-ied-import" data-toggle="modal"><span class="icon-upload"></span>Import</a>
                </div>

                <div tabindex="-1" class="modal hide fade" id="ui-ied-import" data-width="760">
                    <div class="modal-header">
                        <button class="close" aria-hidden="true" type="button" data-dismiss="modal">×</button>
                    <h3>Import script</h3>
                    </div>
                    <!-- ko with: iedConfig -->
                    <div class="modal-body">
                        <div class="row-fluid">
                            <label for="ui-ied-name"></label>
                            <select id="ui-ied-name" data-bind="value: Name, options: scriptsTypes, optionsText: 'Name', optionsValue: 'Name'">

                            </select>
                            <label for="ui-ied-content"></label>
                            <textarea id="ui-ied-content" rows="10" class="span12"
                                data-bind="value: FullContents"></textarea>
                        </div>
                    </div>
                    <!-- /ko -->
                    <div class="modal-footer">
                        <a class="btn" type="button" data-dismiss="modal">Close</a>
                        <button class="btn btn-primary" type="button" data-bind="click: $data.import">Import</button>
                    </div>
                </div>
    
                <!-- ko with: fk_config -->
                <div tabindex="-1" id="ui-fk-edit" class="modal hide fade" data-width="760">
                    <div class="modal-header">
                        <button class="close" aria-hidden="true" type="button" data-dismiss="modal">×</button>
                    <h3>Import script</h3>
                    </div>
                    <div class="modal-body">
                        <div class="row-fluid">
                            <table class="table table-bordered table-striped table-hover" >
                                <thead class="ui-widget-header" style="background-color:#f5f5f5">
                                    <tr>
                                        <th width="10px"> 
                                            Primary Table
                                        </th>
                                        <th width="10px"> </th>
                                        <th width="10px"> 
                                            Table
                                        </th>
                                    </tr>
                                    <tr>
                                        <th width="10px"> 
                                            <select data-bind="value: primary_table, options: $parent.tables, optionsText: 'name'"></select> 
                                        </th>
                                        <th width="10px"> </th>
                                        <th width="10px"> 
                                            <select data-bind="value: table, options: $parent.tables, optionsText: 'name'"></select> 
                                        </th>
                                    </tr>
                                    <tr>
                                        <th colspan="3"> 
                                            Columns
                                        </th>
                                    </tr>
                                    <tr>
                                        <th width="10px"> Name </th>
                                        <th width="10px"> </th>
                                        <th width="10px"> Name </th>
                                        <th width="10px"> </th>
                                    </tr>
                                </thead>
                                <tbody data-bind="foreach: columns_map">
                                    <tr>
                                        <td width="10px"> <select data-bind="value: primary_column, options: $parent.primary_columns, optionsText: 'name'"></select> </td>
                                        <td width="10px"> </td>
                                        <td width="10px"> <select data-bind="value: column,          options: $parent.columns, optionsText: 'name'"></select> </td>
                                        <td width="10px"> <a class="btn btn-mini" data-bind="click: $parent.addColumnMap">+</a> </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <a class="btn" type="button" data-dismiss="modal">Cancel</a>
                        <a class="btn btn-primary" type="button" onclick="ko.dataFor(this).isConfirmed(true);$('#ui-fk-edit').modal('hide');" >Confirm</a>
                    </div>
                </div>
                <!-- /ko -->

                <div id="ui-designer-area" class="ui-selectable">
                    <!-- ko foreach: tables -->
                    <table class="ui-table-design jsplumb-ui-draggable ui-state-default ui-resizable table table-bordered table-hover" 
                        data-bind="attr:{id: name}" onclick="table_drag({target: this});"
                        style="position:absolute;width:100px">
                        <thead class="ui-widget-header" style="background-color:#f5f5f5">
                            <tr>
                                <th width="10px"> <i class="sprite-database_table"></i> </th>
                                <th colspan="2" align="left" data-bind="text: name" ondblclick="tableName_click(this);"></th>
                                <th colspan="99">
                                    <a href="#" class="btn btn-mini" data-bind="click: toggleDisplayMode">
                                        <i data-bind="css:{'icon-minus': displayMode()==DisplayModes.FULL, 'icon-plus': displayMode()!=DisplayModes.FULL}" ></i>
                                    </a>
                                </th>
                            </tr>
                            <tr data-bind="visible: displayMode()==DisplayModes.FULL">
                                <th width="10px"></th>
                                <th width="21px">PK</th>
                                <th>Name</th>
                                <th>DataType</th>
                                <th width="21px">Null</th>
                                <th nowrap="nowrap" width="21px">Auto</th>
                            </tr>
                        </thead>
                        <tbody data-bind="foreach: columns">
                            <tr data-bind="click: designerOptions().toggleSelection, 
                                           css:{'column-selected': designerOptions().isSelected, 'primary-key-row': isPrimary}">
                                <td class="jsplumb-ui-connector-startpoint"> &nbsp; </td>
                                <td align="center" valign="middle">
                                    <a href="#" data-bind="event:{dblclick: toggleIsPrimary}">
                                        <span class="icon-star" data-bind="css:{'icon-yellow': isPrimary(), 'icon-translucent': !isPrimary()}" ></span>
                                    </a>
                                </td>
                                <td align="left" data-bind="text: name" ondblclick="columnName_click(this);"></td>
                    
                                <td data-bind="text: datatype, visible: $parent.displayMode()==DisplayModes.FULL"
                                    ondblclick="dataType_click(this);">
                                    <!--<select data-bind="value: datatype, options: $root.dataTypes" style="width:100px;height:18px">
                                    </select>-->
                                </td>
                                <td data-bind="event:{dblclick: toggleIsNullable}"
                                    style="text-align:center"
                                    >
                                    <span data-bind="visible: isNullable" class="icon-check"></span>
                                </td>
                                <td data-bind="event:{dblclick: toggleIsIdentity}"
                                    style="text-align:center" nowrap="nowrap">
                                    <!--<span data-bind="visible: isIdentity" class="icon-check"></span>-->
                                    <span data-bind="visible: isIdentity" >+1</span>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <!-- /ko -->

                    <div class="cell-editors">
                        <input type="text" id="ui-cell-name-text-editor" />
                        <input type="text" id="ui-cell-datatype-text-editor" data-bind="typeahead: $root.dataTypes" />
                    </div>
                
                    <div class="ui-table-back-drop">
                        <div class="ui-table-constraints">
                            <!-- ko with: $root.selectedTable -->
                            <table class="table table-bordered table-striped table-hover"
                                   data-bind="visible: displayMode() == DisplayModes.FULL && foreingkeys().length!=0">
                            <!-- ko foreach: foreingkeys -->
                                <thead><tr><th colspan="99"><span data-bind="text:name"></span></th></tr></thead>
                                <tbody data-bind="foreach: columnsSpecs">
                                    <tr>
                                        <td><span data-bind="text: columnName"></span></td>
                                        <td><span data-bind="text: sourceColumnName"></span></td>
                                    </tr>
                                </tbody>
                            <!-- /ko -->
                            </table>

                            <table class="table table-bordered table-striped table-hover"
                                   data-bind="visible: displayMode() == DisplayModes.FULL && indexes().length!=0">
                            <!-- ko foreach: indexes -->
                                <thead><tr><th colspan="99"><span data-bind="text:name"></span></th></tr></thead>
                                <tbody data-bind="foreach: columnsSpecs">
                                    <tr>
                                        <td>
                                            <span data-bind="text: column"></span>
                                            <i class="icon" 
                                                data-bind="css: {'icon-arrow-down': sortMode().toUpperCase()==IXSortMode.ASC, 
                                                                 'icon-arrow-up':   sortMode().toUpperCase()==IXSortMode.DESC}"></i>
                                        </td>
                                    </tr>
                                </tbody>
                            <!-- /ko -->
                            </table>

                            <!-- /ko -->

                        </div>
                    </div>
                </div>

                <div id="ui-table-context-menu">
                    <ul class="dropdown-menu" role="menu">
                        <li><a tabindex="-1" href="#">Switch view Compact/Full</a></li>
                        <li class="divider"></li>
                        <li><a tabindex="-1" href="#">Generate Script</a></li>
                        <li><a tabindex="-1" href="#">Clone</a></li>
                        <li class="divider"></li>
                        <li><a tabindex="-1" href="#">Delete</a></li>
                    </ul>
                </div>
                <div id="ui-column-context-menu">
                    <ul class="dropdown-menu" role="menu">
                        <li><a tabindex="-1" href="#">Clone</a></li>
                        <li class="divider"></li>
                        <li><a tabindex="-1" href="#">Delete</a></li>
                    </ul>
                </div>
            </div>
        </div>
      </div>

      <div class="footer">
        <!-- footer content -->
      </div>
    </div>


    <script type="text/javascript" src="js/jquery-1.9.1.js"></script>
    <script type="text/javascript" src="js/jquery-ui-1.10.3.custom.min.js"></script>
    <script type="text/javascript" src="js/jquery.scrollTo.js"></script>    
    
    <script type="text/javascript" src="js/bootstrap.min.js"></script>    
    <script type="text/javascript" src="js/bootstrap-modalmanager.js"></script>    
    <script type="text/javascript" src="js/bootstrap-modal.js"></script>
    <script type="text/javascript" src="js/bootstrap-contextmenu.js"></script>
    
    <script type="text/javascript" src="js/jquery.jsPlumb-1.3.16-all-min.js"></script>
    
    <script type="text/javascript" src="js/knockout-3.0.0beta.js"></script>

    <script type="text/javascript" src="js/knockout.mapping.js"></script>    
    <script type="text/javascript" src="js/knockout-bootstrap.js"></script>

    <script type="text/javascript" src="js/Extenssions/String.extenssion.js"></script>    

    <script type="text/javascript" src="js/assil.ied.js"></script>
    <script type="text/javascript" src="js/assil.ied.ko.js"></script>    
    <script type="text/javascript" src="js/assil.red.js"></script>    

    <script type="text/javascript" src="js/OM/knockout.log.js"></script>
    <script type="text/javascript" src="js/OM/knockout.assil.dsm.sql.generic.js"></script>
    <script type="text/javascript" src="knockout.tableEditor.js"></script>

    <script type="text/javascript">

        var curColourIndex = 1, maxColourIndex = 24, nextColour = function () {
            var R, G, B;
            R = parseInt(128 + Math.sin((curColourIndex * 3 + 0) * 1.3) * 128);
            G = parseInt(128 + Math.sin((curColourIndex * 3 + 1) * 1.3) * 128);
            B = parseInt(128 + Math.sin((curColourIndex * 3 + 2) * 1.3) * 128);
            curColourIndex = curColourIndex + 1;
            if (curColourIndex > maxColourIndex) curColourIndex = 1;
            return "rgb(" + R + "," + G + "," + B + ")";
        };

        jsPlumb.importDefaults({
            Endpoint: ["Dot", { radius: 2 }],
            HoverPaintStyle: { strokeStyle: "#42a62c", lineWidth: 2 },
            ConnectionOverlays: [
                ["Arrow", {
                    location: 1,
                    id: "arrow",
                    length: 14,
                    foldback: 0.8
                }],
                ["Label", { label: "FOO", id: "label" }]
            ]
        });

        //jsPlumb.Defaults.Container = $(".ui-ui-designer-area");

        // G L O  B A L   J S P L U M B   T R I G G E R S 
        var not_enter_jsPlumbConnection = false;
        jsPlumb.bind("jsPlumbConnection", function (conn) {
            if (not_enter_jsPlumbConnection) return;
            

            var srcContext = ko.contextFor(conn.sourceEndpoint.element[0]);
            var tgrContext = ko.contextFor(conn.targetEndpoint.element[0]);
            var srcTable = !srcContext.$parent.name ? srcContext.$data : srcContext.$parent;
            var tgrTable = tgrContext.$data;
            
            var srcColumn = srcContext.$data;
            var tgrColumn = null;//tgrContext.$data;

            //new_fk.addColumnSpec(srcColumn.name(), tgrColumn.name());
            dbModel1.fk_config.primary_table(srcTable);
            dbModel1.fk_config.table(tgrTable);
            dbModel1.fk_config.isCreateNew(true);

            var modal_hide = function () {
                if (dbModel1.fk_config.isCreateNew() && !dbModel1.fk_config.isConfirmed()) {
                    jsPlumb.detach(conn);
                    return;
                }
                var new_fk = new FK("FK_" + dbModel1.fk_config.primary_table().name() + "_" + dbModel1.fk_config.table().name(),
                    dbModel1.fk_config.primary_table().name(), dbModel1.fk_config.table().name());

                var connection_label_tooltip = '';
                $.each(dbModel1.fk_config.columns_map(), function (ixCMap, column_map) {
                    new_fk.addColumnSpec(column_map.column().name(), column_map.primary_column().name());
                    connection_label_tooltip += (connection_label_tooltip.length != 0 ? '\n' : '') + column_map.column().name() + '>>' + column_map.primary_column().name();
                });
                srcTable.foreingkeys.push(new_fk);

                conn.connection.setPaintStyle({ strokeStyle: nextColour() });
                conn.connection.fk = new_fk;
                conn.connection.getOverlay("label").setLabel(new_fk.name());
                conn.connection.getOverlay("label").tooltip = connection_label_tooltip;
                
            };

            $("#ui-fk-edit").unbind("hide", modal_hide);
            $("#ui-fk-edit").bind("hide", modal_hide);

            dbModel1.fk_config.isConfirmed(false);
            $("#ui-fk-edit").modal("show");

            //srcTable.foreingkeys.push(ko.observable(new_fk));

            //conn.connection.setPaintStyle({ strokeStyle: nextColour() });
            //conn.connection.fk = new_fk;
            //conn.connection.getOverlay("label").setLabel(new_fk.name());

        });
        jsPlumb.bind("dblclick", function (conn) {
            dbModel1.fk_config.isCreateNew(false);
            var dblclick_modal_hide = function () {
                //if (!dbModel1.fk_config.isConfirmed()) {return;}

                //var new_fk = new FK("FK_" + dbModel1.fk_config.primary_table().name() + "_" + dbModel1.fk_config.table().name(),
                //    dbModel1.fk_config.primary_table().name(), dbModel1.fk_config.table().name());

                //var connection_label_tooltip = '';
                //$.each(dbModel1.fk_config.columns_map(), function (ixCMap, column_map) {
                //    new_fk.addColumnSpec(column_map.column().name(), column_map.primary_column().name());
                //    connection_label_tooltip += (connection_label_tooltip.length != 0 ? '\n' : '') + column_map.column().name() + '>>' + column_map.primary_column().name();
                //});
                //srcTable.foreingkeys.push(new_fk);

                //conn.connection.setPaintStyle({ strokeStyle: nextColour() });
                //conn.connection.fk = new_fk;
                //conn.connection.getOverlay("label").setLabel(new_fk.name());
                //conn.connection.getOverlay("label").tooltip = connection_label_tooltip;

            };

            $("#ui-fk-edit").unbind("hide", dblclick_modal_hide);
            $("#ui-fk-edit").bind("hide", dblclick_modal_hide);
            var conn_fk = ko.toJS(conn.fk);

            var found = { t: false, pt: false}

            $.each(dbModel1.tables(), function (ixT, T) {
                switch (T.name()) {
                    case conn_fk.tableName:
                        dbModel1.fk_config.table(T);
                        found.t = true;
                        break;
                    case conn_fk.primaryTableName:
                        dbModel1.fk_config.primary_table(T);
                        found.pt = true;
                        break;
                    default:
                }
                if (found.t && found.pt) return false;
            });

            var foundObj = function (arr, propertyName, propertyValue) {
                var objectFounded = null;
                $.each(arr, function (i, obj) {
                    if (!obj[propertyName]) return true;
                    if (ko.unwrap(obj[propertyName]) == propertyValue) {
                        objectFounded = obj;
                        return false;
                    }
                });
                return objectFounded;
            };
            dbModel1.fk_config.columns_map.removeAll();
            $.each(conn_fk.columnsSpecs, function (icCS, columnSpec) {
                var col = foundObj(dbModel1.fk_config.table().columns(), 'name', columnSpec.columnName);
                var primaryCol = foundObj(dbModel1.fk_config.primary_table().columns(), 'name', columnSpec.sourceColumnName);

                dbModel1.fk_config.addColumnMap(col, primaryCol);
            });

            dbModel1.fk_config.isConfirmed(false);
            //dbModel1.fk_config.primary_table(conn.connection.fk.name);

            $("#ui-fk-edit").modal("show");

        });
        //jsPlumb.bind("click", function (conn) {
        //    if (confirm("Delete connection?")) jsPlumb.detach(conn);
        //});
        jsPlumb.bind("contextmenu ", function (conn) {
            //if (confirm("Delete connection?")) jsPlumb.detach(conn);
        });

        jsPlumb.bind("beforeDetach", function (conn) {
            return true;
        });

    </script>

    <script type="text/javascript">
        $('.ui-collapse').collapse();

        function setup_ui_tables() {
            //$(".jsplumb-ui-draggable").draggable({
            //    scroll: true, scrollSensitivity: 100,
            //    containment: ".db-model1"
            //});
            jsPlumb.draggable(jsPlumb.getSelector(".jsplumb-ui-draggable"), {
                scroll: false, containment: ".db-model1",
                drag: table_drag
            });

            //jsPlumb.detachAllConnections();
            //$.each(dbModel1.tables(), function (tIx, table) {
            //    $.each(table.foreingkeys(), function (fkIx, fk) {
            //        if (!fk.primaryTableName) return true;

            //        jsPlumb.connect({
            //            source: fk.primaryTableName(),
            //            target: table.name()
            //        });
            //    });
            //});

            //$("table").resizable({
            //    minWidth: 160,
            //    minHeight: 90,
            //    resize: function (event, ui) {
            //        //var offSetHeight = 0;
            //        //offSetHeight += $(gboxNewTableName + " .ui-jqgrid-titlebar").height();
            //        //offSetHeight += newTable.viewMode == "full" ? $(gboxNewTableName + " .ui-jqgrid-hdiv").height() : 0;
            //        //newTable.setGridWidth(ui.size.width);
            //        //newTable.setGridHeight(ui.size.height - (offSetHeight + 8));
            //    }
            //});

            setup_ui_jsplumb_draggables();

            $(".ui-selectable").selectable();
            $(".ui-resizable").resizable();
            $(".ui-table-design").contextmenu('destroy');
            $(".ui-table-design").contextmenu({
                target: "#ui-table-context-menu",
                before: function (e, element) {
                    // execute code before context menu if shown
                    var context = ko.contextFor(element.get(0));
                    $("#ui-table-context-menu").data("sourceContext", context);
                    return true;
                },
                onItem: function (e, element) {
                    // execute on menu item selection
                    var $context= $("#ui-table-context-menu").data("sourceContext");
                    switch (element.text()) {
                        case "Switch view Compact/Full":
                            $context.$data.toggleDisplayMode();
                            break;
                        case "Generate Script":
                            $context.$data.buildScript();
                            break;
                        case "Clone":
                            break;
                        case "Delete":
                            break;
                        default:
                    }
                }

            });


        }
        function setup_ui_jsplumb_draggables() {
            $.each($(".jsplumb-ui-connector-startpoint"), function (a, b) {
                jsPlumb.makeSource(b, {
                    parent: b.parentElement.parentElement.parentElement,
                    //anchor:"BottomCenter",
                    anchor: "Continuous",
                    connector: ["StateMachine", { curviness: 20 }],
                    connectorStyle: { strokeStyle: nextColour(), lineWidth: 2 },
                    maxConnections: 5,
                    onMaxConnections: function (info, e) {
                        alert("Maximum connections (" + info.maxConnections + ") reached");
                    }
                });

                jsPlumb.makeTarget(b.parentElement.parentElement.parentElement, {
                    dropOptions: { hoverClass: "dragHover" },
                    anchor: "Continuous"
                    //anchor:"TopCenter"			
                });

            });
        }

        var table_drag_data = { last: { $context: null }};
        function table_drag(sender) {

            var $back_drop = $(".ui-table-back-drop");
            var $sender = $(sender.target);
            
            $back_drop.show();
            var sender_offset = $sender.offset();

            $back_drop.offset({ left: sender_offset.left - 20, top: sender_offset.top - 20 });
            $back_drop.width($sender.width() + 40);
            $back_drop.height($sender.height() + 40);

            
            var $context = ko.contextFor(sender.target);
            if (table_drag_data.last.$context == $context) return;
            $context.$root.selectedTable($context.$data);
            
            table_drag_data.last.$context = $context;

        }
        function tableName_click(sender) {
            var context = ko.contextFor(sender);
            click_edit(sender, "name", function (sender, initialValue, value) {
                globalConsole1.appendLog("Table {0}: changed to {1}".format(initialValue, value));
            });
        }
        function dataType_click(sender) {
            var $context = ko.contextFor(sender);
            click_edit(sender, "datatype", function (sender, initialValue, value) {
                globalConsole1.appendLog("Column {0}.{1} : changed to {2}".format($context.$parent.name(), $context.$data.name(), value));
            }, function (originalSender, edit, event) {
                switch (event.keyCode) {
                    case 9: //TAB
                    case 13: //ENTER
                        //Continuous addition column.
                        var cParent = $context.$parent;
                        var pLength = cParent.columns().length;
                        var cIndex = $context.$index();

                        if (cIndex == pLength - 1 && edit.val() == "") return;

                        if (edit.val() != "") {
                            $.Event().stopPropagation();
                            var datatype = edit.val().toString().toUpperCase();
                            var focusedItem = $('ul.typeahead li.active');
                            if($('ul.typeahead').is(':visible') && focusedItem.length>0){
                                datatype = focusedItem.data('value');
                            }
                            
                            $context.$data.datatype(datatype);

                            if ($.inArray(datatype, $context.$root.dataTypes())==-1) $context.$root.dataTypes.push(datatype);

                            if (cParent.columns()[pLength - 1].name() != "") cParent.addNewEmptyColumn();

                            setup_ui_jsplumb_draggables();

                            if ($(originalSender).parent().next().length!=0)
                                $(originalSender).parent().next().children().get(2).ondblclick();
                        }
                        //$(sender).text(edit.initialValue);
                        break;
                    default:
                };
                return !$.Event().isPropagationStopped();

            }, "#ui-cell-datatype-text-editor");
        }

        function columnName_click(sender) {
            var $context = ko.contextFor(sender);
            click_edit(sender, "name", function (sender, initialValue, value) {
                var msg = initialValue == "" ? "Column {0}.{2}: added" : "Column {0}.{1}: changed to {2}";
                globalConsole1.appendLog(msg.format($context.$parent.name(), initialValue, value));
            }, function (originalSender, edit, event) {
                switch (event.keyCode) {
                    case 9: //TAB
                    case 13: //ENTER
                        //Continuous addition column.
                        var cParent = $context.$parent;
                        var pLength = cParent.columns().length;
                        var cIndex = $context.$index();

                        if (cIndex == pLength - 1 && edit.val() == "") return;

                        if (edit.val() != "") {
                            $.Event().stopPropagation();
                            $context.$data.name(edit.val());
                            $(originalSender).parent().children().get(3).ondblclick();
                        }
                        //$(sender).text(edit.initialValue);
                        break;
                    default:
                };

            });
        }

        var lastFuncs = { key: null, blur: null, el: null };
        function click_edit(sender, dataName, changeValueCallback, keyfuncCallback, editorSelector) {
            var selector = editorSelector ? editorSelector : "#ui-cell-name-text-editor";
            var edit = $(selector);
            var data = ko.dataFor(sender);

            edit.val(data[dataName]());
            edit.initialValue = edit.val();


            var keyfunc = function (a, b, c) {
                switch (a.keyCode) {
                    case 27: //ESCAPE, ESC
                        unbindEvts();

                        edit.hide();
                        //$(sender).text(edit.initialValue);
                        break;
                    case 13:
                        data[dataName](edit.val());
                        if (!keyfuncCallback) {
                            unbindEvts();
                            edit.hide();
                        }
                        if (edit.initialValue != edit.val()) changeValueCallback(sender, edit.initialValue, edit.val());

                    default:
                        if (keyfuncCallback) keyfuncCallback(sender, edit, event);
                        //if (edit.initialValue != edit.val()) callback(sender, edit.initialValue, edit.val());
                        //$(sender).text(edit.val());
                };
            }
            var blurFunc = function () {
                data[dataName](edit.val());
                if (edit.initialValue != edit.val()) changeValueCallback(sender, edit.initialValue, edit.val());
                edit.hide();
                //$(sender).text(edit.val());
            };
            //if (keyfuncCallback) return keyfuncCallback(sender, edit, event);

            var bindEvts = function () {
                
                edit.keydown(keyfunc);
                edit.blur(blurFunc);
                lastFuncs[selector] = { el: edit, blur: blurFunc, key: keyfunc };

            };
            var unbindEvts = function () {
                if (!lastFuncs[selector]) return;
                lastFuncs[selector].el.unbind("keydown", lastFuncs[selector].key);
                lastFuncs[selector].el.unbind("blur", lastFuncs[selector].blur);
            };

            unbindEvts();
            bindEvts();

            edit.show();
            edit.offset($(sender).offset());
            edit.width($(sender).width());
            edit.height($(sender).height());
            edit.select();
            edit.focus();

        }

        function compass_dblclick(sender) {
            var data = ko.dataFor(sender);
            var ctx = ko.contextFor(data);

        }

        function checkContinousColumn($element, $context) {
            switch (event.keyCode) {
                case 13:
                    var cParent = $context.$parent;
                    var pLength = cParent.columns().length;
                    var cName = $context.$data.name();
                    var cIndex = $context.$index();
                    
                    if (cIndex == pLength - 1 && cName == "") return;

                    if (cName == null) n = "";
                    if (cName != "") {
                        cParent.addNewEmptyColumn;
                        $("input", $("~", $($element).parent().parent())[0]).focus();
                        setup_ui_jsplumb_draggables();
                    }

                    break;
                default:

            }

        };


        
        //function checkContinousColumn(table) {
        //    var isLastEmpty = false;
        //    var columns = table.columns();
        //    var lastColumn = columns[columns.length - 1];
        //    if (lastColumn == null) {
        //        return true;
        //    }

        //    isLastEmpty = lastColumn.name() == null;
        //    if (!isLastEmpty) isLastEmpty = lastColumn.name() == null;
        //    if (isLastEmpty) return true;

        //    table.addColumn(false, "", dbModel1.dataTypes.valueOf(0), 0, 0, true);

        //    return true;
        //}
        //var myCodeMirror = CodeMirror.fromTextArea($("#ui-ied-content").get(0), { mode: "sql" });
    </script>
</body>
</html>
<!--<xml>
    <root>
        <Table SchemaName="" FullName="InvoiceLine" ConstraintCheck="" UserDefaultDisplay="InvoiceLine" FullTypeName="AlanSoft.DSM.SQLite.Table" Name="InvoiceLine" Description="" DateFormat="yyyy-MM-dd HH:mm:ss" LowerCaseName="invoiceline" UpperCaseName="INVOICELINE" CustomName="InvoiceLine" CustomNameCaseName="None" CustomNameCase="0" CustomNameSeparator="" LowerCaseCustomName="invoiceline" UpperCaseCustomName="INVOICELINE" LowerCamelCaseName="invoiceLine" UpperCamelCaseName="InvoiceLine" ClearedName="InvoiceLine" LowerClearedCaseName="invoiceline" UpperClearedCaseName="INVOICELINE">
            <Column IsOutput="True" OutputAlias="" IsFiltered="False" DefaultValue="" DataType="INTEGER" Precision="0" IsPrimary="True" Size="0" Scale="0" IsNullable="False" SourceTable="" SourceColumn="" IsIndexed="False" ConstraintCheck="" IsIdentity="False" SourceForeignKey="" DateFormat="yyyy-MM-dd HH:mm:ss" FullTypeName="AlanSoft.DSM.SQLite.Column" Description="" Name="InvoiceLineId" UserDefaultDisplay="(PK)InvoiceLineId AS INTEGER" LowerCaseName="invoicelineid" UpperCaseName="INVOICELINEID" CustomName="INVOICE_LINE_ID" CustomNameCaseName="UPPERCASE" CustomNameCase="1" CustomNameSeparator="_" LowerCaseCustomName="invoice_line_id" UpperCaseCustomName="INVOICE_LINE_ID" LowerCamelCaseName="invoiceLineId" UpperCamelCaseName="InvoiceLineId" ClearedName="InvoiceLineId" LowerClearedCaseName="invoicelineid" UpperClearedCaseName="INVOICELINEID" />
            <Column IsOutput="True" OutputAlias="" IsFiltered="False" DefaultValue="" DataType="INTEGER" Precision="0" IsPrimary="False" Size="0" Scale="0" IsNullable="False" SourceTable="" SourceColumn="" IsIndexed="False" ConstraintCheck="" IsIdentity="False" SourceForeignKey="" DateFormat="yyyy-MM-dd HH:mm:ss" FullTypeName="AlanSoft.DSM.SQLite.Column" Description="" Name="InvoiceId" UserDefaultDisplay="InvoiceId AS INTEGER" LowerCaseName="invoiceid" UpperCaseName="INVOICEID" CustomName="INVOICE_ID" CustomNameCaseName="UPPERCASE" CustomNameCase="1" CustomNameSeparator="_" LowerCaseCustomName="invoice_id" UpperCaseCustomName="INVOICE_ID" LowerCamelCaseName="invoiceId" UpperCamelCaseName="InvoiceId" ClearedName="InvoiceId" LowerClearedCaseName="invoiceid" UpperClearedCaseName="INVOICEID" />
            <Column IsOutput="True" OutputAlias="" IsFiltered="False" DefaultValue="" DataType="INTEGER" Precision="0" IsPrimary="False" Size="0" Scale="0" IsNullable="False" SourceTable="" SourceColumn="" IsIndexed="False" ConstraintCheck="" IsIdentity="False" SourceForeignKey="" DateFormat="yyyy-MM-dd HH:mm:ss" FullTypeName="AlanSoft.DSM.SQLite.Column" Description="" Name="TrackId" UserDefaultDisplay="TrackId AS INTEGER" LowerCaseName="trackid" UpperCaseName="TRACKID" CustomName="TRACK_ID" CustomNameCaseName="UPPERCASE" CustomNameCase="1" CustomNameSeparator="_" LowerCaseCustomName="track_id" UpperCaseCustomName="TRACK_ID" LowerCamelCaseName="trackId" UpperCamelCaseName="TrackId" ClearedName="TrackId" LowerClearedCaseName="trackid" UpperClearedCaseName="TRACKID" />
            <Column IsOutput="True" OutputAlias="" IsFiltered="False" DefaultValue="" DataType="NUMERIC" Precision="0" IsPrimary="False" Size="0" Scale="0" IsNullable="True" SourceTable="" SourceColumn="" IsIndexed="False" ConstraintCheck="" IsIdentity="False" SourceForeignKey="" DateFormat="yyyy-MM-dd HH:mm:ss" FullTypeName="AlanSoft.DSM.SQLite.Column" Description="" Name="UnitPrice" UserDefaultDisplay="UnitPrice AS NUMERIC(0,0) NULL" LowerCaseName="unitprice" UpperCaseName="UNITPRICE" CustomName="UNIT_PRICE" CustomNameCaseName="UPPERCASE" CustomNameCase="1" CustomNameSeparator="_" LowerCaseCustomName="unit_price" UpperCaseCustomName="UNIT_PRICE" LowerCamelCaseName="unitPrice" UpperCamelCaseName="UnitPrice" ClearedName="UnitPrice" LowerClearedCaseName="unitprice" UpperClearedCaseName="UNITPRICE" />
            <Column IsOutput="True" OutputAlias="" IsFiltered="False" DefaultValue="" DataType="INTEGER" Precision="0" IsPrimary="False" Size="0" Scale="0" IsNullable="False" SourceTable="" SourceColumn="" IsIndexed="False" ConstraintCheck="" IsIdentity="False" SourceForeignKey="" DateFormat="yyyy-MM-dd HH:mm:ss" FullTypeName="AlanSoft.DSM.SQLite.Column" Description="" Name="Quantity" UserDefaultDisplay="Quantity AS INTEGER" LowerCaseName="quantity" UpperCaseName="QUANTITY" CustomName="QUANTITY" CustomNameCaseName="UPPERCASE" CustomNameCase="1" CustomNameSeparator="_" LowerCaseCustomName="quantity" UpperCaseCustomName="QUANTITY" LowerCamelCaseName="quantity" UpperCamelCaseName="Quantity" ClearedName="Quantity" LowerClearedCaseName="quantity" UpperClearedCaseName="QUANTITY" />
            <FK SourceTableName="Invoice" TableName="" DateFormat="yyyy-MM-dd HH:mm:ss" FullTypeName="AlanSoft.DSM.SQLite.FK" Description="" Name="FK_InvoiceLine_Invoice" UserDefaultDisplay="(InvoiceId &gt;&gt; Invoice.InvoiceId)" LowerCaseName="fk_invoiceline_invoice" UpperCaseName="FK_INVOICELINE_INVOICE" CustomName="FK_INVOICE_LINE_INVOICE" CustomNameCaseName="UPPERCASE" CustomNameCase="1" CustomNameSeparator="_" LowerCaseCustomName="fk_invoice_line_invoice" UpperCaseCustomName="FK_INVOICE_LINE_INVOICE" LowerCamelCaseName="fkInvoiceLineInvoice" UpperCamelCaseName="FkInvoiceLineInvoice" ClearedName="FKInvoiceLineInvoice" LowerClearedCaseName="fkinvoicelineinvoice" UpperClearedCaseName="FKINVOICELINEINVOICE">
                <FK_ColumnSpec SourceColumnName="InvoiceId" DateFormat="yyyy-MM-dd HH:mm:ss" FullTypeName="AlanSoft.DSM.SQLite.FK_ColumnSpec" Description="" Name="InvoiceId" UserDefaultDisplay="InvoiceId&gt;&gt;InvoiceId" LowerCaseName="invoiceid" UpperCaseName="INVOICEID" CustomName="InvoiceId" CustomNameCaseName="None" CustomNameCase="0" CustomNameSeparator="" LowerCaseCustomName="invoiceid" UpperCaseCustomName="INVOICEID" LowerCamelCaseName="invoiceId" UpperCamelCaseName="InvoiceId" ClearedName="InvoiceId" LowerClearedCaseName="invoiceid" UpperClearedCaseName="INVOICEID" />
            </FK>
            <FK SourceTableName="Track" TableName="" DateFormat="yyyy-MM-dd HH:mm:ss" FullTypeName="AlanSoft.DSM.SQLite.FK" Description="" Name="FK_InvoiceLine_Track" UserDefaultDisplay="(TrackId &gt;&gt; Track.TrackId)" LowerCaseName="fk_invoiceline_track" UpperCaseName="FK_INVOICELINE_TRACK" CustomName="FK_INVOICE_LINE_TRACK" CustomNameCaseName="UPPERCASE" CustomNameCase="1" CustomNameSeparator="_" LowerCaseCustomName="fk_invoice_line_track" UpperCaseCustomName="FK_INVOICE_LINE_TRACK" LowerCamelCaseName="fkInvoiceLineTrack" UpperCamelCaseName="FkInvoiceLineTrack" ClearedName="FKInvoiceLineTrack" LowerClearedCaseName="fkinvoicelinetrack" UpperClearedCaseName="FKINVOICELINETRACK">
                <FK_ColumnSpec SourceColumnName="TrackId" DateFormat="yyyy-MM-dd HH:mm:ss" FullTypeName="AlanSoft.DSM.SQLite.FK_ColumnSpec" Description="" Name="TrackId" UserDefaultDisplay="TrackId&gt;&gt;TrackId" LowerCaseName="trackid" UpperCaseName="TRACKID" CustomName="TrackId" CustomNameCaseName="None" CustomNameCase="0" CustomNameSeparator="" LowerCaseCustomName="trackid" UpperCaseCustomName="TRACKID" LowerCamelCaseName="trackId" UpperCamelCaseName="TrackId" ClearedName="TrackId" LowerClearedCaseName="trackid" UpperClearedCaseName="TRACKID" />
            </FK>
            <PK TableName="InvoiceLine" DateFormat="yyyy-MM-dd HH:mm:ss" FullTypeName="AlanSoft.DSM.SQLite.PK" Description="" Name="PK_InvoiceLine" UserDefaultDisplay="(PK_InvoiceLine (InvoiceLineId Asc))" LowerCaseName="pk_invoiceline" UpperCaseName="PK_INVOICELINE" CustomName="PK_INVOICE_LINE" CustomNameCaseName="UPPERCASE" CustomNameCase="1" CustomNameSeparator="_" LowerCaseCustomName="pk_invoice_line" UpperCaseCustomName="PK_INVOICE_LINE" LowerCamelCaseName="pkInvoiceLine" UpperCamelCaseName="PkInvoiceLine" ClearedName="PKInvoiceLine" LowerClearedCaseName="pkinvoiceline" UpperClearedCaseName="PKINVOICELINE">
                <IX_ColumnSpec SortModeName="Asc" SortMode="0" DateFormat="yyyy-MM-dd HH:mm:ss" FullTypeName="AlanSoft.DSM.SQLite.IX_ColumnSpec" Description="" Name="InvoiceLineId" UserDefaultDisplay="InvoiceLineId Asc" LowerCaseName="invoicelineid" UpperCaseName="INVOICELINEID" CustomName="InvoiceLineId" CustomNameCaseName="None" CustomNameCase="0" CustomNameSeparator="" LowerCaseCustomName="invoicelineid" UpperCaseCustomName="INVOICELINEID" LowerCamelCaseName="invoiceLineId" UpperCamelCaseName="InvoiceLineId" ClearedName="InvoiceLineId" LowerClearedCaseName="invoicelineid" UpperClearedCaseName="INVOICELINEID" />
            </PK>

        </Table>

    </root>

</xml>-->